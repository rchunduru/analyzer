// Generated by CoffeeScript 1.8.0
(function() {
  var parseMessage, parseQuery, parseUrl, postRequest, promise, url;

  url = require('url');

  promise = require('bluebird');

  module.exports.parseUrl = parseUrl = function(givenUrl) {
    var parsedurl;
    parsedurl = url.parse(givenUrl, true);
    return parsedurl;
  };

  module.exports.parseMessage = parseMessage = function(message) {
    var parser;
    parser = require('packet').createParser();
    return new promise((function(_this) {
      return function(fulfill, reject) {
        parser.extract("l32 =>size", function(record) {
          var data, size;
          size = record.size;
          data = message.toString('utf-8', 4, size);
          return fulfill(JSON.parse(data));
        });
        return parser.parse(message);
      };
    })(this));
  };

  module.exports.postRequest = postRequest = function(body, url) {
    var http, options, parsedurl, req;
    parsedurl = parseUrl(url);
    options = {
      host: parsedurl.hostname,
      port: parsedurl.port,
      path: parsedurl.pathname,
      method: POST,
      headers: {
        'content-Type': "application/json"
      }
    };
    http = require('http');
    req = http.request(options, function(res) {
      return console.log('rcvd response for http request', res);
    });
    req.write(body);
    return req.end();
  };

  module.exports.parseQuery = parseQuery = function(query) {
    var querystring;
    querystring = require('querystring');
    return querystring.parse(query);
  };

}).call(this);
