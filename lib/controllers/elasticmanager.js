// Generated by CoffeeScript 1.8.0
(function() {
  var ElasticController, elasticClient;

  elasticClient = require('elasticsearch');

  ElasticController = (function() {
    function ElasticController() {}

    ElasticController.prototype.init = function(host, loglevel) {
      this.host = host;
      this.loglevel = loglevel;
      if (this.loglevel == null) {
        this.loglevel = 'trace';
      }
      return new elasticClient.Client({
        host: this.host,
        log: this.loglevel,
        keepAlive: true
      });
    };

    ElasticController.prototype.deleteType = function(dbclient, index, type, callback) {
      return dbClient["delete"](index, type, (function(_this) {
        return function(error) {
          return callback(error);
        };
      })(this));
    };

    ElasticController.prototype.createDocument = function(dbclient, index, type, body) {
      var content;
      content = {
        index: index,
        type: type,
        body: body
      };
      console.log("content is ", content);

      /*
      dbclient.create content, (error, response) =>
          return callback error, response
       */
      return dbclient.create(content);
    };

    ElasticController.prototype.deleteDocument = function(dbclient, index, type, id, callback) {
      return dbclient["delete"]({
        index: index,
        type: type,
        id: id,
        ignoreUnavailable: true
      }, (function(_this) {
        return function(error, response) {
          return callback(error, response);
        };
      })(this));
    };

    ElasticController.prototype.deleteAllDocuments = function(dbclient, index, type, callback) {
      return dbclient["delete"]({
        index: index,
        type: type,
        id: '_all',
        ignoreUnavailable: true
      }, (function(_this) {
        return function(error, results) {
          if (!(error instanceof Error)) {
            return callback("success");
          }
          return callback(error);
        };
      })(this));
    };

    ElasticController.prototype.getDocument = function(dbclient, index, type, callback) {
      var content;
      content = {
        index: index
      };
      if (type) {
        content.type = type;
      }
      return this.search(dbclient, content, callback);
    };

    ElasticController.prototype.search = function(dbclient, index, type, content, callback) {
      return dbclient.search({
        index: index,
        body: content
      }, (function(_this) {
        return function(error, response) {
          if (!(error instanceof Error)) {
            if ((response.hits != null) && response.hits.total > 1) {
              return callback(null, response.hits);
            }
          } else {
            return callback(error);
          }
        };
      })(this));
    };

    return ElasticController;

  })();

  module.exports = ElasticController;

}).call(this);
