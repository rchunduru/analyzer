// Generated by CoffeeScript 1.7.1
(function() {
  var ElasticController, elasticClient;

  elasticClient = require('elasticsearch');

  ElasticController = (function() {
    function ElasticController() {}

    ElasticController.prototype.init = function(host, loglevel) {
      this.host = host;
      this.loglevel = loglevel;
      if (this.loglevel == null) {
        this.loglevel = 'trace';
      }
      return new elasticClient.Client({
        host: this.host,
        log: this.loglevel
      });
    };

    ElasticController.prototype.deleteType = function(dbclient, index, type, callback) {
      return dbClient["delete"](index, type, (function(_this) {
        return function(error) {
          return callback(error);
        };
      })(this));
    };

    ElasticController.prototype.createDocument = function(dbclient, index, type, body, callback) {
      var content;
      content = {
        index: index,
        type: type,
        body: body
      };
      console.log("content is ", content);
      return dbclient.create(content, (function(_this) {
        return function(error, response) {
          return callback(error, response);
        };
      })(this));
    };

    ElasticController.prototype.deleteDocument = function(dbclient, index, type, id, callback) {
      return dbclient["delete"]({
        index: index,
        type: type,
        id: id
      }, (function(_this) {
        return function(error, response) {
          return callback(error, response);
        };
      })(this));
    };

    ElasticController.prototype.getDocument = function(dbclient, index, type, callback) {
      var content;
      content = {
        index: index
      };
      if (type) {
        content.type = type;
      }
      return dbclient.search(content, (function(_this) {
        return function(error, response) {
          return callback(error, response);
        };
      })(this));
    };

    return ElasticController;

  })();

  module.exports = ElasticController;

}).call(this);
